#!/bin/bash

set -eux

#SSH_DIR=$HOME/.ssh
#SSH_KEY=${SSH_DIR}/id_rsa_github
#
#mkdir -p "${SSH_DIR}"
#echo -e "Host *\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile=/dev/null" >> $SSH_DIR/config
#echo -n "${GIT_PRIVATE_KEY:?}" > "${SSH_KEY}"
#chmod 0600 "${SSH_KEY}"
#
#eval $(ssh-agent)
#ssh-add "${SSH_KEY}"

CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
WORKSPACE_DIR="$(cd "${CURRENT_DIR}/../.." && pwd)"
UPDATE_MANIFEST_RELEASES_DIR="${WORKSPACE_DIR}/runtime-ci/util/update-manifest-releases"
DEPLOYMENT_DIR="${WORKSPACE_DIR}/deployment-configuration"


function configure_git() {
  git config --global user.name "${GIT_AUTHOR_NAME:?}"
  git config --global user.email "${GIT_AUTHOR_EMAIL:?}"
}

function fake_stemcell_release() {
  # the binary we use to update the manifest requires a stemcell bosh.io release as well; but we don't necessarily
  # want to automatically bump this, so we just reuse what's in the current manifest
  local STEMCELL_DIR
  STEMCELL_DIR="${WORKSPACE_DIR}/stemcell"
  tail -1 "${DEPLOYMENT_DIR}/cf-mysql-deployment.yml" | awk '{print $2}' | sed 's/"//g' > "${STEMCELL_DIR}/version"
  touch "${STEMCELL_DIR}/sha1"
  touch "${STEMCELL_DIR}/url"
}

function copy_bosh_io_release_info_to_manifest() {
  fake_stemcell_release

  pushd "${UPDATE_MANIFEST_RELEASES_DIR}"
    go run main.go -build-dir "${WORKSPACE_DIR}" -release cf-mysql
  popd


}

#pushd "${DEPLOYMENT_DIR}"
#
#  git checkout release-candidate
#  git checkout -b "v${VERSION}"
#
#  copy_bosh_io_release_info_to_manifest
#
#  git add cf-mysql-deployment.yml
#  git commit -m "Bump version of cf-mysql-release in cf-mysql-deployment.yml"
#
#  git checkout develop
#  git merge "${VERSION_BRANCH}"
#  git checkout master
#  git merge develop
#
#  #Tags the head of the branch
#
#  git tag "v${VERSION}"
#
#
##git push origin :${TAG}
#popd


#determine_new_release_versions
copy_bosh_io_release_info_to_manifest
#configure_git
#commit_deployment_manifest_to_release_candidate
#create_version_branch_from_release_candidate
